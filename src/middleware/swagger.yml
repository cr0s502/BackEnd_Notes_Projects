openapi: 3.0.3
info: 
  title: Backend API Note
  description: API BackEnd del Proyecto Note desarrollado en Express with MongoDB
  contact: 
    email: joancruz0502@hotmail.com
  version: '1.0.11'
servers: 
    - url: http://ec2-52-201-162-134.compute-1.amazonaws.com:3000
      description: API Production server
externalDocs: 
      description: 'LinkedIn'
      url: https://www.linkedin.com/in/joan-cruz-954445116/

paths: 
  /api/login: 
    post:
      tags:
       - User
      requestBody:
        content:
          'application/json':
            schema:
              $ref: '#/components/schemas/userLogin'
      responses: 
        '200':
          description: token
          content:
            'application/json':
              schema:
                $ref: '#/components/schemas/tokenLogin'
          
  /api/register:
    post:
      tags:
        - User
      requestBody:
        content:
          'application/json':
            schema:
              $ref: '#/components/schemas/user'
      responses:
        '200':
          description: return user regristed
          content: 
            'application/json':
              schema:
                $ref: '#/components/schemas/userResponse'
  /api/user:
    get:
      tags:
        - User
      parameters:
        - name: token
          in: header
          description: token to be passed as a header
          required: true
          schema:
            $ref: '#/components/securitySchemes/bearerAuth'
      responses:
        '200':
          description: return user
          content:
            'application/json':
              schema:
                $ref: '#/components/schemas/userResponse'
          
  /api/notes: 
    get:
      tags:
        - Note
      parameters:
        - name: token
          in: header
          description: token to be passed as a header
          required: true
          schema:
            $ref: '#/components/securitySchemes/bearerAuth'
      responses:
        "200":
          description: OK
          content:
            'application/json':
                schema:
                  $ref: '#/components/schemas/note'
    
    post:
      tags:
        - Note
      parameters:
        - name: token
          in: header
          description: token to be passed as a header
          required: true
          schema:
            $ref: '#/components/securitySchemes/bearerAuth'
      requestBody:
        content:
          'application/json':
            schema:
              $ref: '#/components/schemas/noteCreate'
      responses:
        "200":
          description: OK
          content:
            'application/json':
                schema:
                  $ref: '#/components/schemas/note'
  /api/note/{noteId}: 
    get:
      tags:
        - Note
      parameters:
        - name: token
          in: header
          description: token to be passed as a header
          required: true
          schema:
            $ref: '#/components/securitySchemes/bearerAuth'
        - name: noteId
          in: path
          description: note fetch by id
          required: true
          schema:
            $ref: '#/components/schemas/fecthById'
      responses:
        "200":
          description: OK
          content:
            'application/json':
                schema:
                  $ref: '#/components/schemas/note'
    
    put:
      tags:
        - Note
      parameters:
        - name: token
          in: header
          description: token to be passed as a header
          required: true
          schema:
            $ref: '#/components/securitySchemes/bearerAuth'
        - name: noteId
          in: path
          description: note fetch by id
          required: true
          schema:
            $ref: '#/components/schemas/fecthById'
      requestBody:
        content:
          'application/json':
            schema:
              $ref: '#/components/schemas/noteCreate'
      responses:
        "200":
          description: OK
          content:
            'application/json':
                schema:
                  $ref: '#/components/schemas/note'
    
    delete:
      tags:
        - Note
      parameters:
        - name: token
          in: header
          description: token to be passed as a header
          required: true
          schema:
            $ref: '#/components/securitySchemes/bearerAuth'
        - name: noteId
          in: path
          description: note fetch by id
          required: true
          schema:
            $ref: '#/components/schemas/fecthById'
      responses:
        "200":
          description: OK
          content:
            'application/json':
                schema:
                  $ref: '#/components/schemas/note'
      
components:
  schemas:
    note:
        type: object
        properties:
            id:
              type: string
              example: 61dbae02-c147-4e28-863c-db7bd402b2d6
            content:
                type: string
                example: Tarea de hoy
            important:
                    type: boolean
            date:
              type: string
              format: date-time
              example: 12/02/2023
            user:
              $ref: "#/components/schemas/userResponse"
              
    noteCreate:
      type: object
      properties:
        content:
          type: string
          example: nueva tarea
        important:
          type: boolean
          
    fecthById:
      type: string  
      properties:
        id:
          type: string
          example: 61dbae02-c147-4e28-863c-db7bd402b2d6
          
    user: 
        type: object
        properties:
              name:
                type: string
                example: Jhon
              lastname:
                type: string
                example: Doe
              email:
                type: string
                example: john@mail.com
              password:
                type: string
                example: $Filo#Full123
    userResponse:
        type: object
        properties:
                id:
                 type: string
                 example: 61dbae02-c147-4e28-863c-db7bd402b2d6
                name:
                  type: string
                  example: Jhon
                lastname:
                  type: string
                  example: Doe
                email:
                  type: string
                  example: john@mail.com
                date:
                  type: string
                  format: date-time
                  example: 12/02/2023
                notes:
                  $ref: "#/components/schemas/note"
    userLogin:
        type: object
        properties:
              username:
                  type: string
                  example: avispazul
              password:
                  type: string
                  example: carroRojo75
                  
    tokenLogin:
        type: object
        properties:
          token: 
            type: string
                  
  securitySchemes:
    bearerAuth: 
      type: http
      scheme: bearer
      bearerFormat: JWT   